pipeline{
    agent any
     tools {
        maven 'Maven-3.2.5'
    }
    
    environment{
        PATH = "/opt/maven3/bin:$PATH"
    }
    stages{
        stage("Git Checkout"){
            steps{
                git credentialsId: 'javahome2', url: 'https://github.com/yellaiah99/myweb.git'
            }
        }
        stage("Maven Build"){
            steps{
                sh "mvn clean sonar:sonar package"
                
            }
        }
        stage('Upload War To Nexus'){
            steps{
                  nexusArtifactUploader artifacts: [
                       [
                            artifactId: 'myweb', 
                            classifier: '', 
                            file: "target/myweb-8.2.0.war", 
                            type: 'war'
                       ]
                  ], 
                  credentialsId: 'nexus3', 
                  groupId: 'in.javahome', 
                  nexusUrl: '172.31.33.226:8081', 
                  nexusVersion: 'nexus3', 
                  protocol: 'http', 
                  repository: 'sample-release', 
                  version: '8.2.0'  
              }
            }
        stage('Build Docker Image'){
            steps{
                 sh 'docker build -t yellaiah99/spring-boot-mongo .'
                 sh 'docker build -t tomcat:${BUILD_NUMBER} .'
                 sh 'docker run -itd --name yella29 -p 3800:8080 tomcat:${BUILD_NUMBER}'
             }
         }
        stage('Push Docker Image'){
             steps{
                  withCredentials([string(credentialsId: 'DOCKER_HUB_CREDENTIALS', variable: 'DOCKER_HUB_CREDENTIALS')]) {
                      sh "docker login -u yellaiah99 -p ${DOCKER_HUB_CREDENTIALS}"
            }
            sh 'docker push yellaiah99/spring-boot-mongo'
        }
      }
        
        
    }
}
